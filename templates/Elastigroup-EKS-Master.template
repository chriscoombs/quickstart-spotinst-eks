{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "EKS cluster and Spotinst Elastigroup for EKS nodes + VPC (1osj6tpb5) License: Apache 2.0 (Please do not remove) Oct,3,2018",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Availability Zone configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "NumberOfAZs"
                    ]
                },
                {
                    "Label": {
                        "default": "Network configuration"
                    },
                    "Parameters": [
                        "VPCCIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "PublicSubnet3CIDR",
                        "PublicSubnet4CIDR",
                        "CreatePrivateSubnets",
                        "PrivateSubnet1ACIDR",
                        "PrivateSubnet2ACIDR",
                        "PrivateSubnet3ACIDR",
                        "PrivateSubnet4ACIDR",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "BastionAMIOS",
                        "BastionInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EKS configuration"
                    },
                    "Parameters": [
                        "EKSName",
                        "EKSVersion",
                        "EKSAMIType",
                        "BootstrapArguments"
                    ]
                },
                {
                    "Label": {
                        "default": "Spotinst configuration"
                    },
                    "Parameters": [
                        "AccountID",
                        "AccessToken"
                    ]
                },
                {
                    "Label": {
                        "default": "Elastigroup configuration"
                    },
                    "Parameters": [
                        "ElastigroupName",
                        "ClusterOrientation",
                        "SpotPercentage",
                        "CapacityTarget",
                        "CapacityMin",
                        "CapacityMax",
                        "OnDemandInstanceType",
                        "SpotInstancesType",
                        "DetailedMonitoring",
                        "ProductType"
                    ]
                },
                {
                    "Label": {
                        "default": "EKS autoscaler configuration"
                    },
                    "Parameters": [
                        "AutoScalerEnable",
                        "AutoScalerCooldown",
                        "AutoScalerEvaluationPeriods",
                        "AutoScalerHeadroomUnitCount",
                        "AutoScalerHeadroomCPU",
                        "AutoScalerHeadroomRAM"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "NumberOfAZs": {
                    "default": "Number of Availability Zones"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "CreatePrivateSubnets": {
                    "default": "Create private subnets"
                },
                "BastionAMIOS": {
                    "default": "Bastion AMI operating system"
                },
                "BastionInstanceType": {
                    "default": "Bastion instance type"
                },
                "KeyPairName": {
                    "default": "Key pair name"
                },
                "PrivateSubnet1ACIDR": {
                    "default": "Private subnet 1A CIDR"
                },
                "PrivateSubnet2ACIDR": {
                    "default": "Private subnet 2A CIDR"
                },
                "PrivateSubnet3ACIDR": {
                    "default": "Private subnet 3A CIDR"
                },
                "PrivateSubnet4ACIDR": {
                    "default": "Private subnet 4A CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public subnet 2 CIDR"
                },
                "PublicSubnet3CIDR": {
                    "default": "Public subnet 3 CIDR"
                },
                "PublicSubnet4CIDR": {
                    "default": "Public subnet 4 CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 bucket name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 key prefix"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed bastion external access CIDR"
                },
                "ElastigroupName": {
                    "default": "Elastigroup name"
                },
                "AccessToken": {
                    "default": "Spotinst Access Token"
                },
                "AccountID": {
                    "default": "Spotinst Account ID"
                },
                "ClusterOrientation": {
                    "default": "Cluster orientation"
                },
                "SpotPercentage": {
                    "default": "Spot Instances percentage"
                },
                "CapacityTarget": {
                    "default": "Instances capacity target"
                },
                "CapacityMin": {
                    "default": "Instances capacity minimum"
                },
                "CapacityMax": {
                    "default": "Instances capacity maximum"
                },
                "OnDemandInstanceType": {
                    "default": "On-Demand Instance type"
                },
                "SpotInstancesType": {
                    "default": "Spot Instances type"
                },
                "DetailedMonitoring": {
                    "default": "Detailed monitoring"
                },
                "ProductType": {
                    "default": "Product type"
                },
                "EKSName": {
                    "default": "EKS name"
                },
                "EKSVersion": {
                    "default": "EKS Version"
                },
                "AutoScalerEnable": {
                    "default": "Turn on EKS autoscaler"
                },
                "AutoScalerCooldown": {
                    "default": "Autoscaler cooldown"
                },
                "AutoScalerEvaluationPeriods": {
                    "default": "Autoscaler evaluation periods"
                },
                "AutoScalerHeadroomUnitCount": {
                    "default": "Autoscaler Headroom units count"
                },
                "AutoScalerHeadroomCPU": {
                    "default": "Autoscaler Headroom CPU"
                },
                "AutoScalerHeadroomRAM": {
                    "default": "Autoscaler Headroom RAM"
                },
                "EKSAMIType": {
                    "default": "Regular or GPU EKS AMI"
                },
                "BootstrapArguments": {
                    "default": "Bootstrap Arguments For EKS nodes"
                }
            }
        }
    },
    "Parameters": {
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Only two Availability Zones are used for this deployment, and the logical order of your selections is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "CreatePrivateSubnets": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Set to false to create only public subnets. If false, the CIDR parameters for ALL private subnets will be ignored.",
            "Type": "String"
        },
        "BastionAMIOS": {
            "AllowedValues": [
                "Amazon-Linux-HVM",
                "CentOS-7-HVM",
                "Ubuntu-Server-14.04-LTS-HVM",
                "Ubuntu-Server-16.04-LTS-HVM"
            ],
            "Default": "Amazon-Linux-HVM",
            "Description": "The Linux distribution for the AMI to be used for the bastion instances.",
            "Type": "String"
        },
        "BastionInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "t2.micro",
            "Description": "Amazon EC2 instance type for the bastion instances.",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "The name of an existing public/private key pair, which allows you to securely connect to your instance after it launches.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NumberOfAZs": {
            "AllowedValues": [
                "2",
                "3",
                "4"
            ],
            "Default": "2",
            "Description": "Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.",
            "Type": "String"
        },
        "PrivateSubnet1ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for private subnet 1A located in Availability Zone 1.",
            "Type": "String"
        },
        "PrivateSubnet2ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet 2A located in Availability Zone 2.",
            "Type": "String"
        },
        "PrivateSubnet3ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.64.0/19",
            "Description": "CIDR block for private subnet 3A located in Availability Zone 3.",
            "Type": "String"
        },
        "PrivateSubnet4ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.96.0/19",
            "Description": "CIDR block for private subnet 4A located in Availability Zone 4.",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR block for the public DMZ subnet 1 located in Availability Zone 1.",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "CIDR block for the public DMZ subnet 2 located in Availability Zone 2.",
            "Type": "String"
        },
        "PublicSubnet3CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.160.0/20",
            "Description": "CIDR block for the public DMZ subnet 3 located in Availability Zone 3.",
            "Type": "String"
        },
        "PublicSubnet4CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.176.0/20",
            "Description": "CIDR block for the public DMZ subnet 4 located in Availability Zone 4.",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC.",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-spotinst-eks/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "The CIDR IP range that is permitted to access the bastions. We recommend that you set this value to a trusted IP range.",
            "Type": "String"
        },
        "ElastigroupName": {
            "Type": "String",
            "Description": "Name for the Elastigroup."
        },
        "AccessToken": {
            "Type": "String",
            "Description": "The Spotinst API Token."
        },
        "AccountID": {
            "Type": "String",
            "Description": "The Spotinst Account ID."
        },
        "ClusterOrientation": {
            "Type": "String",
            "AllowedValues": [
                "balanced",
                "availabilityOriented",
                "costOriented"
            ],
            "Default": "balanced",
            "Description": "The cluster orientation."
        },
        "SpotPercentage": {
            "Type": "Number",
            "MinValue": "0",
            "MaxValue": "100",
            "Default": "100",
            "Description": "The percentage of Spot Instances in the cluster.",
            "ConstraintDescription": "Select a Number Between 0 and 100"
        },
        "CapacityTarget": {
            "Type": "Number",
            "Description": "The desired number of instances in the cluster."
        },
        "CapacityMin": {
            "Type": "Number",
            "Description": "The minimum number of instances in the cluster."
        },
        "CapacityMax": {
            "Type": "Number",
            "Description": "The maximum number of Instances in the cluster."
        },
        "OnDemandInstanceType": {
            "Type": "String",
            "Default": "c4.large",
            "AllowedValues": [
                "t1.micro",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type",
            "Description": "The On-Demand Instance type to fall back to."
        },
        "SpotInstancesType": {
            "Type": "CommaDelimitedList",
            "Default": "c4.large,c5.large",
            "Description": "A comma-separated list of Spot Instances available to the Elastigroup."
        },
        "DetailedMonitoring": {
            "Type": "String",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Default": "False",
            "Description": "Choose False to disable detailed CloudWatch monitoring."
        },
        "ProductType": {
            "Type": "String",
            "AllowedValues": [
                "Linux/UNIX",
                "SUSE Linux",
                "Windows"
            ],
            "Default": "Linux/UNIX",
            "Description": "The operating system for the instances."
        },
        "EKSName": {
            "Description": "A name for the Amazon EKS cluster.",
            "Type": "String"
        },
        "EKSVersion": {
            "Description": "Amazon EKS Version.",
            "Type": "String",
            "Default": "1.10"
        },
        "AutoScalerEnable": {
            "Description": "Choose False to disable the Spotinst autoscaler.",
            "Type": "String",
            "Default": "true",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "AutoScalerCooldown": {
            "Description": "The time, in seconds, between scaling activities (ignore if not using the autoscaler).",
            "Type": "String",
            "Default": "180"
        },
        "AutoScalerEvaluationPeriods": {
            "Description": "The number of consecutive periods that should pass before scaling down (ignore if not using the autoscaler).",
            "Type": "String",
            "Default": "3"
        },
        "AutoScalerHeadroomUnitCount": {
            "Description": "The number of Headroom units to keep available at all times (ignore if not using the autoscaler).",
            "Type": "String",
            "Default": "0"
        },
        "AutoScalerHeadroomCPU": {
            "Description": "The amount of CPU units reserved in each Headroom unit (ignore if not using the autoscaler).",
            "Type": "String",
            "Default": "0"
        },
        "AutoScalerHeadroomRAM": {
            "Description": "The amount in memory (in MB) reserved in each Headroom unit (ignore if not using the autoscaler).",
            "Type": "String",
            "Default": "0"
        },
        "EKSAMIType": {
            "Type": "String", 
            "Default": "Regular", 
            "Description": "Use Regaulr or GPU AMI for nodes (GPU AMI Supports only p2 and p3 instance", 
            "AllowedValues": [
                "Regular", 
                "GPU"
            ]
        },
        "BootstrapArguments": {
            "Description": "Arguments to pass to the bootstrap script. See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami", 
            "Default": "", 
            "Type": "String"
        }
    },
    "Conditions": {
        "2AZs": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfAZs"
                },
                "2"
            ]
        },
        "3AZs": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfAZs"
                },
                "3"
            ]
        },
        "4AZs": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfAZs"
                },
                "4"
            ]
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template"
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "CreatePrivateSubnets": {
                        "Ref": "CreatePrivateSubnets"
                    },
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1ACIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2ACIDR"
                    },
                    "PrivateSubnet3ACIDR": {
                        "Ref": "PrivateSubnet3ACIDR"
                    },
                    "PrivateSubnet4ACIDR": {
                        "Ref": "PrivateSubnet4ACIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "PublicSubnet3CIDR": {
                        "Ref": "PublicSubnet3CIDR"
                    },
                    "PublicSubnet4CIDR": {
                        "Ref": "PublicSubnet4CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "BastionStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template"
                },
                "Parameters": {
                    "BastionAMIOS": {
                        "Ref": "BastionAMIOS"
                    },
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Sub": "${QSS3KeyPrefix}submodules/quickstart-linux-bastion/"
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        },
        "EKSStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/Elastigroup-EKS.template"
                },
                "Parameters": {
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "EKSName": {
                        "Ref": "EKSName"
                    },
                    "EKSVersion": {
                        "Ref": "EKSVersion"
                    },
                    "NewEKS": "New",
                    "AccessToken": {
                        "Ref": "AccessToken"
                    },
                    "AccountID": {
                        "Ref": "AccountID"
                    },
                    "ElastigroupName": {
                        "Ref": "ElastigroupName"
                    },
                    "SpotPercentage": {
                        "Ref": "SpotPercentage"
                    },
                    "ClusterOrientation": {
                        "Ref": "ClusterOrientation"
                    },
                    "CapacityTarget": {
                        "Ref": "CapacityTarget"
                    },
                    "CapacityMin": {
                        "Ref": "CapacityMin"
                    },
                    "CapacityMax": {
                        "Ref": "CapacityMax"
                    },
                    "OnDemandInstanceType": {
                        "Ref": "OnDemandInstanceType"
                    },
                    "SpotInstancesType": {
                        "Fn::Join" : [
                        ",", 
                        {
                            "Ref": "SpotInstancesType"
                        }
                        ] 
                    },
                    "VPC": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "SubnetIds": {
                         "Fn::Join": [
                            ",",
                            [
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PublicSubnet1ID"
                                    ]
                                },
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PublicSubnet2ID"
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "3AZs",
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet3ID"
                                            ]
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "4AZs",
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet4ID"
                                            ]
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    "DetailedMonitoring": {
                        "Ref": "DetailedMonitoring"
                    },
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "ProductType": {
                        "Ref": "ProductType"
                    },
                    "AutoScalerEnable": {
                        "Ref": "AutoScalerEnable"
                    },
                    "AutoScalerCooldown": {
                        "Ref": "AutoScalerCooldown"
                    },
                    "AutoScalerEvaluationPeriods": {
                        "Ref": "AutoScalerEvaluationPeriods"
                    },
                    "AutoScalerHeadroomCPU": {
                        "Ref": "AutoScalerHeadroomCPU"
                    },
                    "AutoScalerHeadroomRAM": {
                        "Ref": "AutoScalerHeadroomRAM"
                    },
                    "AutoScalerHeadroomUnitCount": {
                        "Ref": "AutoScalerHeadroomUnitCount"
                    },
                    "NewOrExistingNodesSG": "New",
                    "NewOrExistingRole": "New",
                    "BootstrapArguments": {
                        "Ref": "BootstrapArguments" 
                    },
                    "EKSAMIType": {
                        "Ref": "EKSAMIType" 
                    } 
                }
            }
        }
    }
}